<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageListComponents.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>18, 21</value>
  </metadata>
  <data name="imageListComponents.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADW
        FAAAAk1TRnQBSQFMAgEBDQEAAXABAAFwAQABEAEAARABAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABQAMAAUADAAEBAQABCAYAARAYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/wEAAZIOFAHtMAABFQET
        AhIDEwLqARIDEwISARUwAAIUAxMCFAHqAesBEwMUAhMBFDAAARQG7AHtAfcG7AEUMAABFAESA+oCEgHt
        Ae8B6gMSAuoBFDAAARQBEwMSAhMBkgHvARIDEwISARQwAAETBuwB7wEHBuwBEzAAARIGEwGSAQcEEwHs
        Ae0BEjAAARIG6gH3AQcE6gHtAZIBEjAAARMG7AH3AQcE7AGSAfcBEzAAAhQDEwIUAe0B7wETAxQB7AHt
        ARQwAAEUBm0B7QHvBG0C7QEUMAABFAZtAewBkgZtARQwAAITAxICEwFtAesBEgITAxIBEzAAAeoO7wHq
        MAABBw7vAQcwABBDAfcCtAH3AQcB7wL3BO0D7AHvAesNbQHqARIBDgFDAQ8BQwEPCQ4BFQEOAUMBEQEQ
        ARECEAYRAg4CEQH3ArQBrgHxAQkBtQGtAc8CrgKLAWwBiwEHAW0NQwEQARQBAAEUBEMBDwNDAQ8CEQFD
        ARUBDgFDARMBFAESARQBEwEVAm0BhgESARUCEAFmAQ4B9wK0Aa4BvAEJAbsBBwG0Ag8B6gESARUBbAHv
        AW0NEgEUARMBDgEUAREBEgHrARIB6wHqARMBFQERAUMCEAETARABQwFtAewBEgHsAW0BFQNtARIBFAEV
        AQoBZgEVAe8DtAK7AbUDtAHPAa4BiwEUAWwBBw7rAeoBEgEOARQBDgEVAREBDgEAAhEBQwEOARABEQEQ
        ARUBDgFDAewB7wFKAe8B7AEVA20BEgEUAREBCgFmARMB9wO0A7sDtAKtA4sBBwFtDesB6gEUAQABDgH0
        AfMB8QHwAbwCEQEQAhEBQwEVARMBDwFDAewB9wFKAe8B7AEVA20BEgEUAg8BZgEVAfcCtALtAZID7AHr
        AW0C6wHqAW0B7wFtDesBEgETAQABDgH0AfIB8QHwAW0B6wERAeoBFQEQAhEBEgEPAUMBRAEVARMBFQEU
        BREBFAIOAREBDgGSAbQBtQPvAQcC9wHvAuwB7QJtARwObQETARQBAAEOAfQB8wHxAbwB7wFDAhABDwIQ
        AREBEwEPAUMBFQERAUMCEQZDARUCQwERAe0BtAG1AQcC8QG8AgcB8AHvAvcC6wH3AW0N6gIUAQABDgLz
        AfABvAFsARUBQwEPARABEQEQAREBFQEPARUBEQEQARECEAZDAW0CQwFsAewBtAG1AewB9AHyAewB8gG8
        AfEB8AHvAQcBbQHrAZIB6w0TAREBFAEAAQ4B9AHzAfEB8AGLAW0CFAEQAREBQwERAeoBDwFmARMBFAES
        AhQDEQEQAREBQwHsARUBbQETAa4BrQG1Ae0B9AHyAewBvAEHAfEB8AH3AQcCbQGSAewN6gERARQBAAEO
        AvMB8AG8AYsCFQFDAQ8BDgFDARQBEgEOARMBbgHsARIB7AFtBREBQwHrAkMBbQHsAccBtAHzAfQB8QLz
        AbwB8QHwAe8BBwH3AZIB7QHsDesCEwEAAQ4B8wHyAfABvAHtARUBEAEPAxABEQETAeoBbQHsAe8BSgHv
        AewFEQFDARUCQwHsAfcBpwHPAfMB9AHyAvMBvAHxAfAB7wEHAe8B9wGSAewJ6wFtA+sCFAIOAW0B6wPs
        AW0BEQEUAUMBEQEQAREBFAJtAW4B9wFKAe8B7AURBEMB6wG1AccBrQHzAfQB8gLzAbwB8QHwAu8B7AH3
        Ae8B7A3rARMBEgEPAhABFAJDAhEBEAIPARABEQFDARMB6wESARQBQwETAUMBFQURAUMDEQESAa4BpwGt
        AvAC8QHwArwBBwLvAfcBkgLsDW0BFAETAREBEwERARQBEAIRAQ8CEAEPARACDwIUAQ4BQwERAUMLEQFD
        AewBtAHPAvMB8AHyAfEBBwHwAbwC7wL3AuwN6gETARIBQwEUARABFAEVAUMBEQEQAQ8BEAMPARABFAIO
        C0MDEQFDAa4BrQGGAW0B6gESAm0B6gESA+oBEgETAesB7BBtARMB9wHvAfcCBwHvAu0BkgHsAZIB7wHs
        ARMBFA5DARQBEQMQBREGEAERAesB7AX3Am0B7QX3Ae0BEg9DARINQwETAeoBEQEQAUMBFQJDARUCQwYP
        AREB6wHsBe8C6gH3BQcBkgHsDkMB7AFtBEMBFQJtAeoDbQFDARABQwFtAREBFAIVARQBEQEVARMBEQEP
        Ag4BDwEOAQ8BEQFtBuwCEgH3BQcBkgHsBhUBEwEUARUDFAETARQB7AFtBEMBFQYUAREBDwEQAeoBEQET
        AxUBEQEVAUMBEQYPAREBbQHsARIBEwISARMBFQEPAfcFBwGSAhUBEwMUARMBFAMTARQCEwEUARIBFAVD
        Bg8BEQEQAREBFAERARQBFQERAg4BEQEOBw8BEQFtAewBQwEQAREBQwIPAQ4BkgUHAZIBQwQVAhQBEwQU
        AhMBFAEVBkMGDgJDARIBFQMRAUMBFQERAhUBEQYPAREB6wHtAUMBEAERAUMCDwEOAZIFBwGSARMO7AES
        BUMBFQITARQDEwEVAUMBFAEVAREBEgIVARQBEQIUAREGDwERAesB7QZtAewB9wUHAZIBFAJtAusB6gHr
        Am0B6wHqAesCbQHrARQFQwEVBhMBFQNDARECFAERAg4BEQEOBw8BEQHrAe0GBwH3Ae8FBwGSARUB6gET
        AuoBEwHqARMC6gETAuoBEwHqARIGQwYOBEMBEQETAhQBEANDAREBDwQOAQ8BEQHrAe0BbQESAeoBbQIS
        AesB9wUHAZIBFQHqARICbQETAW0BEgHqAW0BEwFtAeoBEgFtARIGQwEPBQ4BFQNDAREBbQETARIBFQFE
        ARQBEwERBg8BEQHrAewBQwEQAREBQwIPAQ4BkgUHAZIBEwTsAesD7AHtAW0B7QLsAe0BEwEUBEMBFQYU
        ARUCQwEUARAB6gIUARABEQFDCRAB7AGzAUMBEAERAUMBEAEPAQ4BkgUHAZIBFA7sARIBbQRDARUG6gEV
        AkMBbQEQAhUBQwEOAQ8BQwIPARAEDwIQAe0BtAESARMCEgETARUBDwGSBQcBkhBDAW0OQwFtARABEgEU
        ARIBFQFEARUBEwERARABQwUQAe0BtAHtAuwB7QHsAhIB9wUHAZIBbQ5DAesB6g5DAeoBFAESAhMBEQIV
        AUMBEQEQAREFEAHtAbMB9wTvAuoB9wUHAZIB7A5DAewBFA5DARQBEgFDARUBEQIPARACDwEQBA8CEAHr
        Aa4F9wJtAewF9wHsAeoOQwESAbwOBwG8ARIOEwEUAewOEgHsEAcBbQHvA/AB9wK8AgcB9wMHAfcDEgLq
        AW0C6gVtAuoCEgHqAhID6ghtAeoBEgERARADEQJDAxUFFAERARMB7QP3AewE7wHtAgcBvAEHARIBFAFt
        AeoBbQESAewD6wFtAewB7QHsAesBEgEUARECEgXqAewD6wHsAesC6gIQAhEDQwQVBBQBEQEVAhQCEwEU
        AxIDEwMUARUBFAHsAZIB7QFtAhQBEgTsAe0BkgHtARMBFAcSAewBbQHsAesC7AFtARICEAMTAUMDEQFD
        ARUEFAERARIBEQMVAUMHFAMVARQB6wHtAfcBbQIQAQ8BvAHwAQcC7wH3AhIBFQISBeoB7QFtAfcB6wHs
        Ae0BbQESAhADEgQQAREDQwIUAREBFQNDARUBQwEVAUMFFQJDARUBFAIAAQ4BkgEVARQBFQEPAg4CDwEO
        ARMBEgEVAxID6gESAQABDwERAQ8BEAERAW0BEgIQARMCEgQQAREBFAESARMCFAERBxUGFAMVARQCAAEO
        Ae0BEAIRARADDwEOAQ8BEwESAUMDEgPqARIBAAEQAUMCDgFDAesBbQERAhACEQNDAhUBDgIPAhQBEQHr
        ARUNFAFtARQB9wIHAewBBwLvBPcC7wEVARMBFQESAeoBEgPqAW0EvAIHAhIBFQEQAhEDQwMVAQ8BDgEP
        ARQCFQEUBhUHFAEVAhQB8gL/AewJ/wEVARIBFQMSBOoGBwFtAeoBEgEQAQ8GEAERAhUBQwIUARIBEwHs
        A+0B7ATtAewD7QHsAhQCDwERAZIBFQEUARUBEwMUAhUBEwESARUBEgbqAQ4BEQFDAg4BEQFtAhIBEAMP
        BBABEQMPAUMBFAESAeoB8AL0AfMB7wTzAe8D8gHwAeoBFAMOAe0BQwIVARAEDwEQARMBEgEUAhIE6gFt
        Ag8BQwEPAREBQwJtAUMEEAMRAkMCDwIQARQEFQMUAxMFFAIVARQBEAEPAREB7AFDARUBQwERAg8DQwIS
        ARUDEgTqAe0B9wHtAuoB7AHqARICEAIRA0MDFQEPAhABEQEUAREBEwEVAxQBFQIUARMEFAMVARQB7wH0
        Af8B6wFDAREBQwL/AfMB8QL/Ae0BEgEVARIG6gH3Au8B7AKSAewB6gMQBRECQwEPAhABEQEVAREBFAER
        AkMBFQFDARUBQwEUAxUDQwIVARMCFAFtAeoBbQHqARIBEwFtAeoBEgITARIBFAISBeoBEwISBOoBEgIQ
        AQ8GEAERAQ8CEAERARQBEQYVBhQEFQEUAhIC6gUSAeoFEgEUBRIC6gHtAW0B6wFtAusCEgIQAw8EEAER
        Ag8CEAEUAREB6gEVDBQBFQHqARQBmQIbARIBGwLDARoBwwQbARIB7AEUARMCEgTqAe0BkgTtAeoB7QMQ
        AhEDQwIVBRQBEQHqBBUJFAEVARIBEwHqARIB6gFtAuoCbQLqAW0B6gESAW0B7QH3AZIB7QXsAe0G7AHr
        ARUBQwMVBBQDEwMSARUBQgFNAT4HAAE+AwABKAMAAUADAAFAAwABAQEAAQEGAAECFgAD//8A/wADAAs=
</value>
  </data>
</root>